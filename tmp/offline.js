"use strict";

var ProjectStore = Store.create();
var cleanup = ProjectStore.add({title: "Cleanup"});
ProjectStore.add({title: "The Seasoning"});
ProjectStore.add({title: "Fixa bilen"});


var TaskStore = Store.create();
TaskStore.add({title: "Bada nisse", projectId: cleanup, description: "Nisse är riktigt smutsig och behöver verkligen bada. Att inte bada är inte vore katastrofalt och skulle kunna leda till en sanitär olägenhet.", tags: ["apa", "bepa", "cepa"]});
TaskStore.add({title: "Herpa derp", description: "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec vitae lectus ac libero consectetur congue tincidunt vitae turpis. Mauris placerat ex et purus luctus varius. Vivamus elit enim, semper eu arcu at, dignissim sollicitudin lectus. Morbi non magna vitae eros lobortis scelerisque sit amet vel turpis. Nullam risus felis, ornare sed nisi ac, fringilla elementum nunc. Fusce tempus, quam ut eleifend luctus, lacus odio euismod risus, eu sagittis leo lorem in sem. Vestibulum tristique neque scelerisque, rutrum libero non, placerat nibh. Maecenas ut dolor vitae ligula tempus finibus ut nec erat. In et arcu nec massa rutrum ultricies.", tags: ["derp", "derp", "derp"]});
TaskStore.getTasksForProject = function (projectId) {
	var it = this.items.values();
	var result = [];
	for (var task of it) {
		if (projectId === task.projectId) {
			result.push(Store.copy(task));
		}
	}

	return result;
};

var ProjectItem = React.createClass({displayName: "ProjectItem",
	clickHandler: function (event) {
		event.preventDefault();
		this.props.select(this.props.project);
	},
	render: function () {
		var className;
		if (this.props.current) {
			className = "current";
		}
		return (
			React.createElement("li", {className: className, onClick: this.clickHandler}, this.props.project.title)
		);
	},
});

var ProjectList = React.createClass({displayName: "ProjectList",
	render: function () {
		var currentProject = this.props.currentProject;
		var selectHandler = this.props.select;
		var projectNodes = this.props.projects.map(function (project) {
			var isCurrent = (project.id == currentProject.id);
			return (
					React.createElement(ProjectItem, {key: project.id, project: project, current: isCurrent, select: selectHandler})
			);
		});
		return (
				React.createElement("ul", {className: "projectList"}, projectNodes)
		);
	},
});

var TaskItem = React.createClass({displayName: "TaskItem",
	clickHandler: function (event) {
		event.preventDefault();
		this.props.select(this.props.task);
	},
	render: function () {
		var tagNodes = this.props.task.tags.map(function (tag) {
			return (
				{tag}
			);
		});
		var className = ["taskItem"];
		if (this.props.current) {
			className.push("current");
		}
		return (
				React.createElement("div", {className: className, onClick: this.clickHandler}, 
				React.createElement("div", {className: "title"}, 
					this.props.task.title
				), 
				React.createElement("div", {className: "tags"}, 
					this.props.task.tags.join(",")
				)
			)
		);
	}
});

var TaskList = React.createClass({displayName: "TaskList",
	render: function () {
		var callback = this.props.select;
		var currentTaskId = this.props.currentTask.id
		var taskNodes = this.props.tasks.map(function (task) {
			var isCurrent = (task.id = currentTaskId);
			return (
					React.createElement(TaskItem, {task: task, current: isCurrent, select: callback})
			);
		});
		return (
			React.createElement("div", {className: "taskList"}, 
				taskNodes
			)
		);
	}
});

var ProjectView = React.createClass({displayName: "ProjectView",
	getInitialState: function () {
		return {
			currentProject: {id: null},
			currentTask: {id: null},
			projects: ProjectStore.getAll(),
			tasks: [],
		};
	},
	storeDidChange: function () {},
	componentDidMount: function () {
		var unregister = ProjectStore.events.change.listen(this.storeDidChange, this);
		this.setState({unregister: unregister});
	},
	componentWillUnmount: function () {
		this.state.unregister();
	},
	selectProject: function (project) {
		var tasks = TaskStore.getTasksForProject(project.id);
		this.setState({
			currentProject: ProjectStore.getId(project.id),
			currentTask: {id: null},
			tasks: tasks,
		});
	},
	selectTask: function (task) {
		this.setState({currentTask: TaskStore.getId(task.id)});
	},
	render: function () {
		return (
			React.createElement("div", {className: "projectView"}, 
				React.createElement(ProjectList, {projects: this.state.projects, currentProject: this.state.currentProject, select: this.selectProject}), 
				React.createElement(DetailView, {project: this.state.currentProject, task: this.state.currentTask}), 
				React.createElement(SmartBox, null), 
				React.createElement(TaskList, {tasks: this.state.tasks, currentTask: this.state.currentTask, select: this.selectTask})
			)
		);
	},
});

var ViewSelection = React.createClass({displayName: "ViewSelection",
	render: function () {
		return (
			React.createElement("ul", {className: "viewSelection"}, 
				React.createElement("li", null, React.createElement("div", {className: "icon"}, "I"), "Inbox"), 
				React.createElement("li", {className: "current"}, React.createElement("div", {className: "icon"}, "P"), "Projects"), 
				React.createElement("li", null, React.createElement("div", {className: "icon"}, "C"), "Contexts"), 
				React.createElement("li", null, React.createElement("div", {className: "icon"}, "R"), "Review"), 
				React.createElement("li", null, React.createElement("div", {className: "icon"}, "S"), "Search")
			)
		);
	},
});

var DetailView = React.createClass({displayName: "DetailView",
	render: function () {
		return (
			React.createElement("div", {className: "detailView"}, 
				React.createElement("h4", null, "Title"), 
				React.createElement("input", {type: "text", value: "Bada nisse"}), 
				React.createElement("hr", null), 

				React.createElement("h4", null, "Project"), 
				React.createElement("hr", null), 

				React.createElement("h4", null, "Dates"), 
				React.createElement("hr", null), 

				React.createElement("h4", null, "Notes"), 
				React.createElement("textarea", null)

			)
		);
	},
});

var SmartBox = React.createClass({displayName: "SmartBox",
	render: function () {
		return (
			React.createElement("div", {className: "smartBox"}, 
				React.createElement("input", {type: "text"})
			)
		);
	},
});

var Application = React.createClass({displayName: "Application",
	render: function () {
		return (
			React.createElement("div", null, 
				React.createElement(ViewSelection, null), 
				React.createElement(ProjectView, null)
			)
		);
	}
});

React.render(React.createElement(Application, null), document.getElementById('content'));

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidHJhbnNmb3JtZWQuanMiLCJzb3VyY2VzIjpbbnVsbF0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLFlBQVksQ0FBQzs7QUFFYixJQUFJLFlBQVksR0FBRyxLQUFLLENBQUMsTUFBTSxFQUFFLENBQUM7QUFDbEMsSUFBSSxPQUFPLEdBQUcsWUFBWSxDQUFDLEdBQUcsQ0FBQyxDQUFDLEtBQUssRUFBRSxTQUFTLENBQUMsQ0FBQyxDQUFDO0FBQ25ELFlBQVksQ0FBQyxHQUFHLENBQUMsQ0FBQyxLQUFLLEVBQUUsZUFBZSxDQUFDLENBQUMsQ0FBQztBQUMzQyxZQUFZLENBQUMsR0FBRyxDQUFDLENBQUMsS0FBSyxFQUFFLFlBQVksQ0FBQyxDQUFDLENBQUM7QUFDeEM7O0FBRUEsSUFBSSxTQUFTLEdBQUcsS0FBSyxDQUFDLE1BQU0sRUFBRSxDQUFDO0FBQy9CLFNBQVMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxLQUFLLEVBQUUsWUFBWSxFQUFFLFNBQVMsRUFBRSxPQUFPLEVBQUUsV0FBVyxFQUFFLCtJQUErSSxFQUFFLElBQUksRUFBRSxDQUFDLEtBQUssRUFBRSxNQUFNLEVBQUUsTUFBTSxDQUFDLENBQUMsQ0FBQyxDQUFDO0FBQ3RQLFNBQVMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxLQUFLLEVBQUUsWUFBWSxFQUFFLFdBQVcsRUFBRSxvb0JBQW9vQixFQUFFLElBQUksRUFBRSxDQUFDLE1BQU0sRUFBRSxNQUFNLEVBQUUsTUFBTSxDQUFDLENBQUMsQ0FBQyxDQUFDO0FBQ3h0QixTQUFTLENBQUMsa0JBQWtCLEdBQUcsVUFBVSxTQUFTLEVBQUU7Q0FDbkQsSUFBSSxFQUFFLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQyxNQUFNLEVBQUUsQ0FBQztDQUM3QixJQUFJLE1BQU0sR0FBRyxFQUFFLENBQUM7Q0FDaEIsS0FBSyxJQUFJLElBQUksSUFBSSxFQUFFLEVBQUU7RUFDcEIsSUFBSSxTQUFTLEtBQUssSUFBSSxDQUFDLFNBQVMsRUFBRTtHQUNqQyxNQUFNLENBQUMs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QVUsQ0FBQSxFQUFBO0FBQ2xCLElBQUksb0JBQUEsVUFBUyxFQUFBLElBQVksQ0FBQTs7R0FFaEIsQ0FBQTtJQUNMO0VBQ0Y7QUFDRixDQUFDLENBQUMsQ0FBQzs7QUFFSCxJQUFJLDhCQUE4Qix3QkFBQTtDQUNqQyxNQUFNLEVBQUUsWUFBWTtFQUNuQjtHQUNDLG9CQUFBLEtBQUksRUFBQSxDQUFBLENBQUMsU0FBQSxFQUFTLENBQUMsVUFBVyxDQUFBLEVBQUE7SUFDekIsb0JBQUEsT0FBTSxFQUFBLENBQUEsQ0FBQyxJQUFBLEVBQUksQ0FBQyxNQUFNLENBQUEsQ0FBRyxDQUFBO0dBQ2hCLENBQUE7SUFDTDtFQUNGO0FBQ0YsQ0FBQyxDQUFDLENBQUM7O0FBRUgsSUFBSSxpQ0FBaUMsMkJBQUE7Q0FDcEMsTUFBTSxFQUFFLFlBQVk7RUFDbkI7R0FDQyxvQkFBQSxLQUFJLEVBQUEsSUFBQyxFQUFBO0lBQ0osb0JBQUMsYUFBYSxFQUFBLElBQUEsQ0FBRyxDQUFBLEVBQUE7SUFDakIsb0JBQUMsV0FBVyxFQUFBLElBQUEsQ0FBRyxDQUFBO0dBQ1YsQ0FBQTtJQUNMO0VBQ0Y7QUFDRixDQUFDLENBQUMsQ0FBQzs7QUFFSCxLQUFLLENBQUMsTUFBTSxDQUFDLG9CQUFDLFdBQVcsRUFBQSxJQUFBLENBQUcsQ0FBQSxFQUFFLFFBQVEsQ0FBQyxjQUFjLENBQUMsU0FBUyxDQUFDLENBQUMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG52YXIgUHJvamVjdFN0b3JlID0gU3RvcmUuY3JlYXRlKCk7XG52YXIgY2xlYW51cCA9IFByb2plY3RTdG9yZS5hZGQoe3RpdGxlOiBcIkNsZWFudXBcIn0pO1xuUHJvamVjdFN0b3JlLmFkZCh7dGl0bGU6IFwiVGhlIFNlYXNvbmluZ1wifSk7XG5Qcm9qZWN0U3RvcmUuYWRkKHt0aXRsZTogXCJGaXhhIGJpbGVuXCJ9KTtcblxuXG52YXIgVGFza1N0b3JlID0gU3RvcmUuY3JlYXRlKCk7XG5UYXNrU3RvcmUuYWRkKHt0aXRsZTogXCJCYWRhIG5pc3NlXCIsIHByb2plY3RJZDogY2xlYW51cCwgZGVzY3JpcHRpb246IFwiTmlzc2Ugw6RyIHJpa3RpZ3Qgc211dHNpZyBvY2ggYmVow7Z2ZXIgdmVya2xpZ2VuIGJhZGEuIEF0dCBpbnRlIGJhZGEgw6RyIGludGUgdm9yZSBrYXRhc3Ryb2ZhbHQgb2NoIHNrdWxsZSBrdW5uYSBsZWRhIHRpbGwgZW4gc2FuaXTDpHIgb2zDpGdlbmhldC5cIiwgdGFnczogW1wiYXBhXCIsIFwiYmVwYVwiLCBcImNlcGFcIl19KTtcblRhc2tTdG9yZS5hZGQoe3RpdGxlOiBcIkhlcnBhIGRlcnBcIiwgZGVzY3JpcHRpb246IFwiTG9yZW0gaXBzdW0gZG9sb3Igc2l0IGFtZXQsIGNvbnNlY3RldHVyIGFkaXBpc2NpbmcgZWxpdC4gRG9uZWMgdml0YWUgbGVjdHVzIGFjIGxpYmVybyBjb25zZWN0ZXR1ciBjb25ndWUgdGluY2lkdW50IHZpdGFlIHR1cnBpcy4gTWF1cmlzIHBsYWNlcmF0IGV4IGV0IHB1cnVzIGx1Y3R1cyB2YXJpdXMuIFZpdmFtdXMgZWxpdCBlbmltLCBzZW1wZXIgZXUgYXJjdSBhdCwgZGlnbmlzc2ltIHNvbGxpY2l0dWRpbiBsZWN0dXMuIE1vcmJpIG5vbiBtYWduYSB2aXRhZSBlcm9zIGxvYm9ydGlzIHNjZWxlcmlzcXVlIHNpdCBhbWV0IHZlbCB0dXJwaXMuIE51bGxhbSByaXN1cyBmZWxpcywgb3JuYXJlIHNlZCBuaXNpIGFjLCBmcmluZ2lsbGEgZWxlbWVudHVtIG51bmMuIEZ1c2NlIHRlbXB1cywgcXVhbSB1dCBlbGVpZmVuZCBsdWN0dXMsIGxhY3VzIG9kaW8gZXVpc21vZCByaXN1cywgZXUgc2FnaXR0aXMgbGVvIGxvcmVtIGluIHNlbS4gVmVzdGlidWx1bSB0cmlzdGlxdWUgbmVxdWUgc2NlbGVyaXNxdWUsIHJ1dHJ1bSBsaWJlcm8gbm9uLCBwbGFjZXJhdCBuaWJoLiBNYWVjZW5hcyB1dCBkb2xvciB2aXRhZSBsaWd1bGEgdGVtcHVzIGZpbmlidXMgdXQgbmVjIGVyYXQuIEluIGV0IGFyY3UgbmVjIG1hc3NhIHJ1dHJ1bSB1bHRyaWNpZXMuXCIsIHRhZ3M6IFtcImRlcnBcIiwgXCJkZXJwXCIsIFwiZGVycFwiXX0pO1xuVGFza1N0b3JlLmdldFRhc2tzRm9yUHJvamVjdCA9IGZ1bmN0aW9uIChwcm9qZWN0SWQpIHtcblx0dmFyIGl0ID0gdGhpcy5pdGVtcy52YWx1ZXMoKTtcblx0dmFyIHJlc3VsdCA9IFtdO1xuXHRmb3IgKHZhciB0YXNrIG9mIGl0KSB7XG5cdFx0aWYgKHByb2plY3RJZCA9PT0gdGFzay5wcm9qZWN0SWQpIHtcblx0XHRcdHJlc3VsdC5wdXNoKFN0b3JlLmNvcHkodGFzaykpO1xuXHRcdH1cblx0fVxuXG5cdHJldHVybiByZXN1bHQ7XG59O1xuXG52YXIgUHJvamVjdEl0ZW0gPSBSZWFjdC5jcmVhdGVDbGFzcyh7XG5cdGNsaWNrSGFuZGxlcjogZnVuY3Rpb24gKGV2ZW50KSB7XG5cdFx0ZXZlbnQucHJldmVudERlZmF1bHQoKTtcblx0XHR0aGlzLnByb3BzLnNlbGVjdCh0aGlzLnByb3BzLnByb2plY3QpO1xuXHR9LFxuXHRyZW5kZXI6IGZ1bmN0aW9uICgpIHtcblx0XHR2YXIgY2xhc3NOYW1lO1xuXHRcdGlmICh0aGlzLnByb3BzLmN1cnJlbnQpIHtcblx0XHRcdGNsYXNzTmFtZSA9IFwiY3VycmVudFwiO1xuXHRcdH1cblx0XHRyZXR1cm4gKFxuXHRcdFx0PGxpIGNsYXNzTmFtZT17Y2xhc3NOYW1lfSBvbkNsaWNrPXt0aGlzLmNsaWNrSGFuZGxlcn0gPnt0aGlzLnByb3BzLnByb2plY3QudGl0bGV9PC9saT5cblx0XHQpO1xuXHR9LFxufSk7XG5cbnZhciBQcm9qZWN0TGlzdCA9IFJlYWN0LmNyZWF0ZUNsYXNzKHtcblx0cmVuZGVyOiBmdW5jdGlvbiAoKSB7XG5cdFx0dmFyIGN1cnJlbnRQcm9qZWN0ID0gdGhpcy5wcm9wcy5jdXJyZW50UHJvamVjdDtcblx0XHR2YXIgc2VsZWN0SGFuZGxlciA9IHRoaXMucHJvcHMuc2VsZWN0O1xuXHRcdHZhciBwcm9qZWN0Tm9kZXMgPSB0aGlzLnByb3BzLnByb2plY3RzLm1hcChmdW5jdGlvbiAocHJvamVjdCkge1xuXHRcdFx0dmFyIGlzQ3VycmVudCA9IChwcm9qZWN0LmlkID09IGN1cnJlbnRQcm9qZWN0LmlkKTtcblx0XHRcdHJldHVybiAoXG5cdFx0XHRcdFx0PFByb2plY3RJdGVtIGtleT17cHJvamVjdC5pZH0gcHJvamVjdD17cHJvamVjdH0gY3VycmVudD17aXNDdXJyZW50fSBzZWxlY3Q9e3NlbGVjdEhhbmRsZXJ9IC8+XG5cdFx0XHQpO1xuXHRcdH0pO1xuXHRcdHJldHVybiAoXG5cdFx0XHRcdDx1bCBjbGFzc05hbWU9XCJwcm9qZWN0TGlzdFwiPntwcm9qZWN0Tm9kZXN9PC91bD5cblx0XHQpO1xuXHR9LFxufSk7XG5cbnZhciBUYXNrSXRlbSA9IFJlYWN0LmNyZWF0ZUNsYXNzKHtcblx0Y2xpY2tIYW5kbGVyOiBmdW5jdGlvbiAoZXZlbnQpIHtcblx0XHRldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuXHRcdHRoaXMucHJvcHMuc2VsZWN0KHRoaXMucHJvcHMudGFzayk7XG5cdH0sXG5cdHJlbmRlcjogZnVuY3Rpb24gKCkge1xuXHRcdHZhciB0YWdOb2RlcyA9IHRoaXMucHJvcHMudGFzay50YWdzLm1hcChmdW5jdGlvbiAodGFnKSB7XG5cdFx0XHRyZXR1cm4gKFxuXHRcdFx0XHR7dGFnfVxuXHRcdFx0KTtcblx0XHR9KTtcblx0XHR2YXIgY2xhc3NOYW1lID0gW1widGFza0l0ZW1cIl07XG5cdFx0aWYgKHRoaXMucHJvcHMuY3VycmVudCkge1xuXHRcdFx0Y2xhc3NOYW1lLnB1c2goXCJjdXJyZW50XCIpO1xuXHRcdH1cblx0XHRyZXR1cm4gKFxuXHRcdFx0XHQ8ZGl2IGNsYXNzTmFtZT17Y2xhc3NOYW1lfSBvbkNsaWNrPXt0aGlzLmNsaWNrSGFuZGxlcn0+XG5cdFx0XHRcdDxkaXYgY2xhc3NOYW1lPVwidGl0bGVcIj5cblx0XHRcdFx0XHR7dGhpcy5wcm9wcy50YXNrLnRpdGxlfVxuXHRcdFx0XHQ8L2Rpdj5cblx0XHRcdFx0PGRpdiBjbGFzc05hbWU9XCJ0YWdzXCI+XG5cdFx0XHRcdFx0e3RoaXMucHJvcHMudGFzay50YWdzLmpvaW4oXCIsXCIpfVxuXHRcdFx0XHQ8L2Rpdj5cblx0XHRcdDwvZGl2PlxuXHRcdCk7XG5cdH1cbn0pO1xuXG52YXIgVGFza0xpc3QgPSBSZWFjdC5jcmVhdGVDbGFzcyh7XG5cdHJlbmRlcjogZnVuY3Rpb24gKCkge1xuXHRcdHZhciBjYWxsYmFjayA9IHRoaXMucHJvcHMuc2VsZWN0O1xuXHRcdHZhciBjdXJyZW50VGFza0lkID0gdGhpcy5wcm9wcy5jdXJyZW50VGFzay5pZFxuXHRcdHZhciB0YXNrTm9kZXMgPSB0aGlzLnByb3BzLnRhc2tzLm1hcChmdW5jdGlvbiAodGFzaykge1xuXHRcdFx0dmFyIGlzQ3VycmVudCA9ICh0YXNrLmlkID0gY3VycmVudFRhc2tJZCk7XG5cdFx0XHRyZXR1cm4gKFxuXHRcdFx0XHRcdDxUYXNrSXRlbSB0YXNrPXt0YXNrfSBjdXJyZW50PXtpc0N1cnJlbnR9IHNlbGVjdD17Y2FsbGJhY2t9IC8+XG5cdFx0XHQpO1xuXHRcdH0pO1xuXHRcdHJldHVybiAoXG5cdFx0XHQ8ZGl2IGNsYXNzTmFtZT1cInRhc2tMaXN0XCI+XG5cdFx0XHRcdHt0YXNrTm9kZXN9XG5cdFx0XHQ8L2Rpdj5cblx0XHQpO1xuXHR9XG59KTtcblxudmFyIFByb2plY3RWaWV3ID0gUmVhY3QuY3JlYXRlQ2xhc3Moe1xuXHRnZXRJbml0aWFsU3RhdGU6IGZ1bmN0aW9uICgpIHtcblx0XHRyZXR1cm4ge1xuXHRcdFx0Y3VycmVudFByb2plY3Q6IHtpZDogbnVsbH0sXG5cdFx0XHRjdXJyZW50VGFzazoge2lkOiBudWxsfSxcblx0XHRcdHByb2plY3RzOiBQcm9qZWN0U3RvcmUuZ2V0QWxsKCksXG5cdFx0XHR0YXNrczogW10sXG5cdFx0fTtcblx0fSxcblx0c3RvcmVEaWRDaGFuZ2U6IGZ1bmN0aW9uICgpIHt9LFxuXHRjb21wb25lbnREaWRNb3VudDogZnVuY3Rpb24gKCkge1xuXHRcdHZhciB1bnJlZ2lzdGVyID0gUHJvamVjdFN0b3JlLmV2ZW50cy5jaGFuZ2UubGlzdGVuKHRoaXMuc3RvcmVEaWRDaGFuZ2UsIHRoaXMpO1xuXHRcdHRoaXMuc2V0U3RhdGUoe3VucmVnaXN0ZXI6IHVucmVnaXN0ZXJ9KTtcblx0fSxcblx0Y29tcG9uZW50V2lsbFVubW91bnQ6IGZ1bmN0aW9uICgpIHtcblx0XHR0aGlzLnN0YXRlLnVucmVnaXN0ZXIoKTtcblx0fSxcblx0c2VsZWN0UHJvamVjdDogZnVuY3Rpb24gKHByb2plY3QpIHtcblx0XHR2YXIgdGFza3MgPSBUYXNrU3RvcmUuZ2V0VGFza3NGb3JQcm9qZWN0KHByb2plY3QuaWQpO1xuXHRcdHRoaXMuc2V0U3RhdGUoe1xuXHRcdFx0Y3VycmVudFByb2plY3Q6IFByb2plY3RTdG9yZS5nZXRJZChwcm9qZWN0LmlkKSxcblx0XHRcdGN1cnJlbnRUYXNrOiB7aWQ6IG51bGx9LFxuXHRcdFx0dGFza3M6IHRhc2tzLFxuXHRcdH0pO1xuXHR9LFxuXHRzZWxlY3RUYXNrOiBmdW5jdGlvbiAodGFzaykge1xuXHRcdHRoaXMuc2V0U3RhdGUoe2N1cnJlbnRUYXNrOiBUYXNrU3RvcmUuZ2V0SWQodGFzay5pZCl9KTtcblx0fSxcblx0cmVuZGVyOiBmdW5jdGlvbiAoKSB7XG5cdFx0cmV0dXJuIChcblx0XHRcdDxkaXYgY2xhc3NOYW1lPVwicHJvamVjdFZpZXdcIj5cblx0XHRcdFx0PFByb2plY3RMaXN0IHByb2plY3RzPXt0aGlzLnN0YXRlLnByb2plY3RzfSBjdXJyZW50UHJvamVjdD17dGhpcy5zdGF0ZS5jdXJyZW50UHJvamVjdH0gc2VsZWN0PXt0aGlzLnNlbGVjdFByb2plY3R9IC8+XG5cdFx0XHRcdDxEZXRhaWxWaWV3IHByb2plY3Q9e3RoaXMuc3RhdGUuY3VycmVudFByb2plY3R9IHRhc2s9e3RoaXMuc3RhdGUuY3VycmVudFRhc2t9IC8+XG5cdFx0XHRcdDxTbWFydEJveCAvPlxuXHRcdFx0XHQ8VGFza0xpc3QgdGFza3M9e3RoaXMuc3RhdGUudGFza3N9IGN1cnJlbnRUYXNrPXt0aGlzLnN0YXRlLmN1cnJlbnRUYXNrfSBzZWxlY3Q9e3RoaXMuc2VsZWN0VGFza30gLz5cblx0XHRcdDwvZGl2PlxuXHRcdCk7XG5cdH0sXG59KTtcblxudmFyIFZpZXdTZWxlY3Rpb24gPSBSZWFjdC5jcmVhdGVDbGFzcyh7XG5cdHJlbmRlcjogZnVuY3Rpb24gKCkge1xuXHRcdHJldHVybiAoXG5cdFx0XHQ8dWwgY2xhc3NOYW1lPVwidmlld1NlbGVjdGlvblwiPlxuXHRcdFx0XHQ8bGk+PGRpdiBjbGFzc05hbWU9XCJpY29uXCI+STwvZGl2PkluYm94PC9saT5cblx0XHRcdFx0PGxpIGNsYXNzTmFtZT1cImN1cnJlbnRcIj48ZGl2IGNsYXNzTmFtZT1cImljb25cIj5QPC9kaXY+UHJvamVjdHM8L2xpPlxuXHRcdFx0XHQ8bGk+PGRpdiBjbGFzc05hbWU9XCJpY29uXCI+QzwvZGl2PkNvbnRleHRzPC9saT5cblx0XHRcdFx0PGxpPjxkaXYgY2xhc3NOYW1lPVwiaWNvblwiPlI8L2Rpdj5SZXZpZXc8L2xpPlxuXHRcdFx0XHQ8bGk+PGRpdiBjbGFzc05hbWU9XCJpY29uXCI+UzwvZGl2PlNlYXJjaDwvbGk+XG5cdFx0XHQ8L3VsPlxuXHRcdCk7XG5cdH0sXG59KTtcblxudmFyIERldGFpbFZpZXcgPSBSZWFjdC5jcmVhdGVDbGFzcyh7XG5cdHJlbmRlcjogZnVuY3Rpb24gKCkge1xuXHRcdHJldHVybiAoXG5cdFx0XHQ8ZGl2IGNsYXNzTmFtZT1cImRldGFpbFZpZXdcIj5cblx0XHRcdFx0PGg0PlRpdGxlPC9oND5cblx0XHRcdFx0PGlucHV0IHR5cGU9XCJ0ZXh0XCIgdmFsdWU9XCJCYWRhIG5pc3NlXCIgLz5cblx0XHRcdFx0PGhyIC8+XG5cblx0XHRcdFx0PGg0PlByb2plY3Q8L2g0PlxuXHRcdFx0XHQ8aHIgLz5cblxuXHRcdFx0XHQ8aDQ+RGF0ZXM8L2g0PlxuXHRcdFx0XHQ8aHIgLz5cblxuXHRcdFx0XHQ8aDQ+Tm90ZXM8L2g0PlxuXHRcdFx0XHQ8dGV4dGFyZWE+PC90ZXh0YXJlYT5cblxuXHRcdFx0PC9kaXY+XG5cdFx0KTtcblx0fSxcbn0pO1xuXG52YXIgU21hcnRCb3ggPSBSZWFjdC5jcmVhdGVDbGFzcyh7XG5cdHJlbmRlcjogZnVuY3Rpb24gKCkge1xuXHRcdHJldHVybiAoXG5cdFx0XHQ8ZGl2IGNsYXNzTmFtZT1cInNtYXJ0Qm94XCI+XG5cdFx0XHRcdDxpbnB1dCB0eXBlPVwidGV4dFwiIC8+XG5cdFx0XHQ8L2Rpdj5cblx0XHQpO1xuXHR9LFxufSk7XG5cbnZhciBBcHBsaWNhdGlvbiA9IFJlYWN0LmNyZWF0ZUNsYXNzKHtcblx0cmVuZGVyOiBmdW5jdGlvbiAoKSB7XG5cdFx0cmV0dXJuIChcblx0XHRcdDxkaXY+XG5cdFx0XHRcdDxWaWV3U2VsZWN0aW9uIC8+XG5cdFx0XHRcdDxQcm9qZWN0VmlldyAvPlxuXHRcdFx0PC9kaXY+XG5cdFx0KTtcblx0fVxufSk7XG5cblJlYWN0LnJlbmRlcig8QXBwbGljYXRpb24gLz4sIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdjb250ZW50JykpO1xuIl19